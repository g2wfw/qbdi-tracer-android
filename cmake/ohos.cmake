set(target_abi_list armeabi-v7a arm64-v8a x86_64 thumb )
set(stl_type_list c++_static c++_shared none)
include(${CMAKE_CURRENT_LIST_DIR}/common.cmake)


function(_set_ohos_toolchain_file toolchain_file)
    if (EXISTS ${NDK_HOME})
        set(CMAKE_TOOLCHAIN_FILE ${NDK_HOME}/build/cmake/ohos.toolchain.cmake CACHE STRING "for ohos.toolchain.cmake path")
    endif ()
    if (IS_DIRECTORY ${toolchain_file})
        if (EXISTS ${toolchain_file}/build/cmake/ohos.toolchain.cmake)
            set(CMAKE_TOOLCHAIN_FILE ${toolchain_file}/build/cmake/ohos.toolchain.cmake CACHE STRING "for ohos.toolchain.cmake path")
            message("-- set CMAKE_TOOLCHAIN_FILE to:${CMAKE_TOOLCHAIN_FILE}")
            return()
        endif ()
    endif ()
    if (EXISTS ${toolchain_file})
        get_filename_component(toolchain_file_name ${toolchain_file} NAME)
        if (${toolchain_file_name} STREQUAL "ohos.toolchain.cmake")
            set(CMAKE_TOOLCHAIN_FILE ${toolchain_file}/build/cmake/ohos.toolchain.cmake CACHE STRING "for ohos.toolchain.cmake path")
            message("-- set CMAKE_TOOLCHAIN_FILE to:${CMAKE_TOOLCHAIN_FILE}")
            return()
        endif ()
    endif ()
    message(WARNING "toolchain_file:${toolchain_file} is not ohos toolchain file,try find ndk home by env")
    message(FATAL_ERROR "-- can not find ohos.toolchain.cmake file,please set [toolchain_file] to ohos home or ohos.toolchain.cmake")
endfunction()

# 设置ndk目录信息
function(_set_ndk_home _ndk_home)
    if (IS_DIRECTORY ${_ndk_home})
        if (EXISTS ${_ndk_home}/oh-uni-package.json)
            set(OHOS_NDK_HOME ${_ndk_home} CACHE STRING "for ndk home path")
            set_property(GLOBAL PROPERTY OHOS_NDK_HOME ${_ndk_home})
            message("-- set OHOS_NDK_HOME to: ${ANDROID_NDK_HOME}")
        endif ()
    else ()
        message(FATAL_ERROR "-- OHOS_NDK_HOME:${_ndk_home} not a directory")
    endif ()
endfunction()

# init_android_ndk 函数说明
# 参数ndk_home：表示主动设置ndk路径,可以设置，也可以不设置，不设
# 如果全局定义 NDK_HOME，那么将优先使用NDK_HOME的值，将不会使用输入的ndk_home值，也不会查找环境变量中给的ndk-build
# 示例：cmake -DNDK_HOME={path of ndk} -DCMAKE_BUILD_TYPE=MinSizeRel ..
function(init_ohos_ndk ndk_home)
    if (DEFINED NDK_HOME)
        set(ndk_home ${NDK_HOME})
    elseif (NOT DEFINED ndk_home)
        message(FATAL_ERROR "ohos ndk not found. Please make sure the OHOS NDK is installed ")
    endif ()
    _set_ndk_home(${ndk_home})
    _set_ohos_toolchain_file(${ndk_home})
endfunction()

function(init_ohos_build target_abi stl_type)
    set(CMAKE_SYSTEM_NAME "OHOS" CACHE STRING "for CMAKE_SYSTEM_NAME value")
    if (NOT ${target_abi} IN_LIST target_abi_list)
        message(FATAL_ERROR "-- unsupported target abi:${target_abi},target_abi must in ${target_abi_list}")
    endif ()
    if (NOT DEFINED target_abi)
        set(target_abi "armeabi-v7a")
    endif ()
    if (NOT DEFINED stl_type)
        set(stl_type "c++_static")
    endif ()

    set(OHOS_TOOLCHAIN clang)
    #如果未设置架构
    if (NOT DEFINED OHOS_ARCH)
        set(OHOS_ARCH ${target_abi} CACHE STRING "for OHOS_ARCH value")
    endif ()
    
    if (NOT　DEFINED　OHOS_STL)
        if (NOT ${stl_type} IN_LIST stl_type_list)
            message(FATAL_ERROR "-- unsupported stl type :${stl_type},stl type must in ${stl_type_list}")
        endif ()
        set(OHOS_STL ${stl_type} CACHE STRING "for OHOS_STL value")
    endif ()
    if (OHOS_ARCH STREQUAL armeabi)
        set(OHOS_ARM_NEON thumb CACHE STRING "for OHOS_ARM_NEON value")
    endif()
    set(OHOS_PLATFORM_LEVEL 1 CACHE STRING "for OHOS_PLATFORM_LEVEL value")
endfunction()